name: Build with charmcraft

on:
  workflow_call:
    inputs:
      runs-on:
        description: Description of the runner
        default: ubuntu-20.04
        type: string
      lxd-channel:
        description: Snap channel for lxd
        default: latest/stable
        type: string
      charmcraft-channel:
        description: Snap channel for charmcraft
        default: latest/stable
        type: string
      project-dir:
        description: Specify the project's directory
        default: './'
        type: string
      bases-indicies:
        description: Optionally set which bases indices to build
        default: '[]'
        type: string
    outputs:
      charm:
        description: Name of the Charm
        value: ${{ jobs.charmcraft-pack.outputs.charm-name }}

jobs:
  charmcraft-pack:
    name: Charmcraft Pack
    runs-on: ${{ inputs.runs-on }}
    env:
      CHARMCRAFT_CHANNEL: ${{ inputs.charmcraft-channel }}
    outputs:
      charm-name: ${{ steps.metadata.outputs.charm-name }}
    steps:
      - name: Initialize LXD
        run: |
          sudo apt-get remove -qy lxd lxd-client | true
          sudo snap list lxd | true
          sudo snap install lxd --channel=${{ inputs.lxd-channel }}
          sudo snap refresh lxd --channel=${{ inputs.lxd-channel }}
          sudo lxd waitready
          sudo lxd init --auto
          sudo chmod a+wr /var/snap/lxd/common/lxd/unix.socket
          sudo lxc network set lxdbr0 ipv6.address none
          sudo usermod -a -G lxd $USER
          sg lxd -c 'lxc version'

      - name: Remove Docker
        run: |
          # https://github.com/canonical/lxd-cloud/blob/f20a64a8af42485440dcbfd370faf14137d2f349/test/includes/lxd.sh#L13-L23
          sudo rm -rf /etc/docker
          sudo apt-get purge moby-buildx moby-engine moby-cli moby-compose moby-containerd moby-runc -y
          sudo iptables -P FORWARD ACCEPT

      - name: Initialize Charmcraft tools
        run: |
          sudo snap install yq
          sudo snap install charmcraft --channel $CHARMCRAFT_CHANNEL --classic

      - uses: actions/checkout@v3

      - name: Map Bases Index
        id: bases-index
        run: |
          output=$(echo '${{ inputs.bases-indicies }}' | jq -r 'map("--bases-index=" + .) | join(" ")')
          echo "result=$output" >> "$GITHUB_OUTPUT"

      - name: Resolve charm version
        working-directory: ${{ inputs.project-dir }}
        run: |
          cat version || git rev-parse --short HEAD | tee version

      - name: Pack Charm
        id: metadata
        run: |
          sudo charmcraft pack -v --project-dir ${{ inputs.project-dir }} ${{ steps.bases-index.outputs.result }}
          echo "charm-name=$(yq '.name' metadata.yaml)" >> "$GITHUB_OUTPUT"

      - name: Setup Artifact Collection
        if: ${{ failure() }}
        run: mkdir tmp

      - name: Collect Charmcraft Logs
        if: ${{ failure() }}
        run: |
          cp /home/runner/.local/state/charmcraft/log/charmcraft-*.log tmp/ | true
          sudo cp /root/.local/state/charmcraft/log/charmcraft-*.log tmp/ | true

      - name: Upload charm artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.metadata.outputs.charm-name }}
          path: ./*.charm

      - name: Upload debug artifacts
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: tmp
