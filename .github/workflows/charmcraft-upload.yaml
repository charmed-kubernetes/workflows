name: Upload with charmcraft

on:
  workflow_call:
    inputs:
      runs-on:
        description: Description of the runner
        default: ubuntu-20.04
        type: string
      charmcraft-channel:
        description: Snap channel for charmcraft
        default: latest/stable
        type: string
      charm:
        description: Name of the Charm
        required: true
        type: string
      arch:
        description: Charm specific architecture (leave blank if multiarch)
        type: string
        default: ''
      resources:
        description: Name of charm resources artifact
        default: ""
        type: string
      release-channels:
        description: List of release channels
        type: string
        default: '["latest/edge"]'
    secrets:
      CHARMCRAFT_AUTH: 
        required: true

jobs:
  charmcraft-upload-resources:
    name: Charmcraft Upload Resources
    runs-on: ${{ inputs.runs-on }}
    env:
      CHARMCRAFT_AUTH: ${{ secrets.CHARMCRAFT_AUTH }}
      CHARMCRAFT_CHANNEL: ${{ inputs.charmcraft-channel }}
      ARTIFACT_PATH: /tmp/artifact/
    outputs:
      resources: ${{ steps.resources.outputs.result }}
    steps:
      - run: mkdir -p ${ARTIFACT_PATH}

      - name: Download Charm Resources
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.resources }}
          path: ${{ env.ARTIFACT_PATH }}

      - name: Initialize Charmcraft tools
        run: |
          sudo snap install charmcraft --channel $CHARMCRAFT_CHANNEL --classic
          charmcraft whoami

      - name: Upload resources to charmhub.io
        id: resources
        working-directory: ${{ env.ARTIFACT_PATH }}
        run: |
          resources=()
          # read a list of objects from the charmcraft-upload.spec in the artifact
          # Schema:
          #    resource (required): the name of the resource
          #    revision (optional): an existing charmhub resource revision
          #    filepath (optional): a filepath resource
          #    image    (optional): an image resource tar archive from docker save
          upload_spec=$(jq --compact-output '.[]' charmcraft-upload.spec)
          readarray -t resource_list <<< "$upload_spec"

          for item in "${resource_list[@]}"; do
            resource=$(jq --raw-output '.resource' <<< "$item")
            revision=$(jq --raw-output '.revision//""' <<< "$item")
            image=$(jq --raw-output '.image//""' <<< "$item")
            filepath=$(jq --raw-output '.filepath//""' <<< "$item")
            
            if [ -n "$image" ]; then
              docker rmi $(docker images -a -q)
              docker load < $image
              upload_args="--image=$(docker images -a --format '{{.ID}}')"
            elif [ -n "$filepath" ]; then
              upload_args="--filepath=$filepath"
            fi

            if [ -n "$revision" ]; then
              echo --- Using $resource revision $revision ---
            elif [ -n "$upload_args" ]; then
              echo --- Uploading $resource with $upload_args ---
              upload=$(charmcraft upload-resource --format=json ${{ inputs.charm }} $resource $upload_args)
              revision=$(jq --raw-output '.revision' <<< "$upload")
            else
              echo "--- $resource didn't specify .revision or .image or .filepath ---" >&2
              echo "    $item" >&2
              exit 1;
            fi

            resources+=("$resource:$revision")
          done

          resources_json=$(jq -c -n '$ARGS.positional' --args "${resources[@]}")
          echo "result=$resources_json" >> "$GITHUB_OUTPUT"

  charmcraft-upload:
    name: Charmcraft Upload
    needs: [charmcraft-upload-resources]
    runs-on: ${{ inputs.runs-on }}
    env:
      CHARMCRAFT_AUTH: ${{ secrets.CHARMCRAFT_AUTH }}
      CHARMCRAFT_CHANNEL: ${{ inputs.charmcraft-channel }}
      CHARM_NAME: ${{ inputs.charm }}
    steps:
      - name: Download charm artifacts
        uses: actions/download-artifact@v3
        id: download
        with:
          name: ${{ env.CHARM_NAME }}

      - name: Initialize Charmcraft tools
        run: |
          sudo snap install charmcraft --channel $CHARMCRAFT_CHANNEL --classic
          charmcraft whoami

      - name: Map Resources
        id: resource-args
        run: |
          output=$(echo '${{ needs.charmcraft-upload-resources.outputs.resources }}' | jq -r 'map("--resource=" + .) | join(" ")')
          echo "result=$output" >> "$GITHUB_OUTPUT"

      - name: Map Releases
        id: release-args
        run: |
          output=$(echo '${{ inputs.release-channels }}' | jq -r 'map("--release=" + .) | join(" ")')
          echo "result=$output" >> "$GITHUB_OUTPUT"

      - name: Upload charm
        env:
          RELEASES: ${{ steps.release-args.outputs.result }}
          RESOURCES: ${{ steps.resource-args.outputs.result }}
        working-directory: ${{ steps.download.outputs.download-path }}
        run: |
          FILE_PATTERN="./$CHARM_NAME*${{ inputs.arch }}.charm"
          REVISION=""
          if output=$(charmcraft upload --format=json $FILE_PATTERN $RELEASES $RESOURCES) ; then
            echo $output
          else
            REVISION=$(jq '.errors[].message | capture(".*existing package is: (?<rev>[0-9]+)")' <<< "$output")
          fi

          if [ ! -z "$REVISION" ]; then
            REVISION="--revision $REVISION"
            charmcraft release --format=json $CHARM_NAME $REVISION $RELEASES $RESOURCES
          fi
